version: 2.1

commands:
  checkout_all:
    description: Since we're using submodules, need an extended way to checkout all code
    steps:
      - checkout
      - run:
          name: install system dependencies
          command: |
            sudo apt update && sudo apt install -y git
      - run:
          name: checkout submodules
          command: |
            git submodule sync --recursive
            git submodule update --recursive --init

jobs:
  lint:
    docker:
      - image: tensorflow/tensorflow:2.5.1
    steps:
      - checkout_all
      - run:
          name: install system dependencies
          command: |
            apt update && apt install -y python3-venv wget
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            chmod +x /bin/hadolint
      - restore_cache:
          keys:
            - 'app-dependencies-{{ checksum "./keras-flask-deploy-webapp/requirements.txt" }}'
            - app-dependencies-
      - run:
          name: install python dependencies
          command: |
            cd ./keras-flask-deploy-webapp
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      - save_cache:
          paths:
            - .
          key: 'app-{{ checksum "./keras-flask-deploy-webapp/requirements.txt" }}'
      - run:
          name: run lint
          command: |
            cd ./keras-flask-deploy-webapp
            . venv/bin/activate
            pylint --disable=R,C,W1203,W1202,E0611 app.py
            hadolint Dockerfile

  build-and-push-image:
    docker:
      - image: cimg/aws:2022.06
    steps:
      - checkout_all
      - run:
          name: authenticate
          command: |
            aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY_ID
      - run:
          name: build and tag image
          command: |
            REPO=nd991_capstone
            docker build -t $REPO ./keras-flask-deploy-webapp
            docker image tag $REPO $AWS_ECR_REGISTRY_ID/$REPO:latest
            docker image tag $REPO $AWS_ECR_REGISTRY_ID/$REPO:$CIRCLE_SHA1
      - run:
          name: push image to ECR
          command:
            docker push $AWS_ECR_REGISTRY_ID/$REPO:latest
            docker push $AWS_ECR_REGISTRY_ID/$REPO:$CIRCLE_SHA1

workflows:
  default:
    jobs:
      - lint
      - build-and-push-image:
          requires: [lint]
